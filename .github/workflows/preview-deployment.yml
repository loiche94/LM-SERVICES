name: Preview Deployment for Pull Requests

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [opened, synchronize, reopened]

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout PR Branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      
      - name: Create Preview Branch
        run: |
          PREVIEW_BRANCH="preview-pr-${{ github.event.pull_request.number }}"
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          
          # Create or update preview branch from PR branch
          git branch -D $PREVIEW_BRANCH 2>/dev/null || true
          git checkout -b $PREVIEW_BRANCH
          git push origin $PREVIEW_BRANCH --force
      
      - name: Generate Preview URL
        id: preview-url
        run: |
          REPO_OWNER="loiche94"
          REPO_NAME="LM-SERVICES"
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PREVIEW_BRANCH="preview-pr-${PR_NUMBER}"
          
          # Note: GitHub Pages URL format
          # For branch deployment, we'll use a standard pattern
          PREVIEW_URL="https://${REPO_OWNER}.github.io/${REPO_NAME}/preview/pr-${PR_NUMBER}/"
          
          echo "preview-url=${PREVIEW_URL}" >> $GITHUB_OUTPUT
          echo "Preview URL: ${PREVIEW_URL}"
      
      - name: Comment PR with Preview URL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const previewUrl = "${{ steps.preview-url.outputs.preview-url }}";
            const prNumber = context.issue.number;
            
            // Check if comment already exists
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });
            
            const botComment = comments.data.find(comment => 
              comment.body.includes('Preview URL') && 
              comment.user.type === 'Bot'
            );
            
            const commentBody = `## üîç Preview Available\n\nYour changes are now available for preview:\n\n**Preview URL:** [${previewUrl}](${previewUrl})\n\n**How to test:**\n1. Click the link above to view your changes\n2. The preview is automatically updated with each new commit\n3. The preview URL remains the same throughout the PR lifecycle\n\n---\n*This comment is automatically updated with each commit*`;
            
            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }
